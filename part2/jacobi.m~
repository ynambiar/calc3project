

function [iterations, x, doesConverge] = jacobi(A,y,x0,tol)

    n = length(y);
    for j = 1:1:n
         x(j) = ((y(j) - A(j,[1:j-1,j+1:n]) * x0([1:j-1,j+1:n])) / A(j,j)); % the first iteration
    end
    error = ones(n,1);

    
%     for i = 1:n
%         j = 1:n;
%         j(i) = [];
%         B = abs(A(i,j));
%         Check(i) = abs(A(i,i)) - sum(B);
%         if Check(i) < 0
%             fprintf('The matrix is not diagonally dominant at row %2i\n\n',i)
%         end
%     end
    
%     x1 = x';
    x1 = x;
%     x0 = x0';
    
    doesConverge = 0;
    iterations = 0;
%     while norm(x1 - x0) > tol & iterations < 100
    while max(error) > tol && iterations < 100
        iterations = iterations + 1;
%         x1 = x';
        for j = 1:1:n
            z(j) = ((y(j) - A(j,[1:j-1,j+1:n]) * x1([1:j-1,j+1:n])) / A(j,j));
        end
        x0 = x1;
        x1 = z';
        disp('hey')
        
        if size(x0) ~= size(x1)
            x0 = x
        end
        
    
        error = sqrt((x1' - x0).^2)
    end
    
    
    if iterations == 100
        doesConverge = -1;
    else
        doesConverge = 1;
    end
    x = x1';
end